import uploadImage from '../lib/uploadImage.js'
import { sticker } from '../lib/sticker.js'
import MessageType from '@adiwajshing/baileys'
const effects = ['greyscale', 'invert', 'brightness', 'threshold', 'sepia', 'red', 'green', 'blue', 'blurple', 'pixelate', 'blur']

let handler = async (m, { conn, usedPrefix, text }) => {
let effect = text.trim().toLowerCase()
if (!effects.includes(effect)) throw `
*_‚ú≥Ô∏è–ü–†–ê–í–ò–õ–¨–ù–û–ï –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï –ö–û–ú–ê–ù–î–´ ‚ú≥Ô∏è_*
*üëâ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:* ${usedPrefix}—Å—Ç–∏–∫–µ—Ä—Ñ–∏–ª—å—Ç—Ä (—ç—Ñ—Ñ–µ–∫—Ç) 
- –ò –æ—Ç–≤–µ—Ç –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É
*‚úÖ –ü—Ä–∏–º–µ—Ä:* ${usedPrefix}—Å—Ç–∏–∫–µ—Ä—Ñ–∏–ª—å—Ç—Ä –æ—Ç—Ç–µ–Ω–∫–∏ —Å–µ—Ä–æ–≥–æ
*–°–ø–∏—Å–æ–∫ –≠—Ñ—Ñ–µ–∫—Ç–æ–≤:*
${effects.map(effect => `_> ${effect}_`).join('\n')}
`.trim()
let q = m.quoted ? m.quoted : m
let mime = (q.msg || q).mimetype || ''
if (!mime) throw '*_üî∞ No se encontro la imagen_*\n\n*_‚úÖ –û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ_*'
if (!/image\/(jpe?g|png)/.test(mime)) throw `*_‚ö†Ô∏è –§–æ—Ä–º–∞—Ç –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è_*\n\n*_üëâüèª –û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É_*`
let img = await q.download()
let url = await uploadImage(img)
let apiUrl = global.API('https://some-random-api.ml/canvas/', encodeURIComponent(effect), {
avatar: url
})
try {
let stiker = await sticker(null, apiUrl, global.packname, global.author)
conn.sendFile(m.chat, stiker, null, { asSticker: true })
} catch (e) {
m.reply('*_‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏ –≤ sticker_*\n\n*_‚ú≥Ô∏è –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤–º–µ—Å—Ç–æ..._*')
await conn.sendFile(m.chat, apiUrl, 'image.png', null, m)
}}
handler.help = ['stickfilter (caption|reply media)']
handler.tags = ['General']
handler.command = /^(—Å—Ç–∏–∫–µ—Ä—Ñ–∏–ª—å—Ç—Ä|stikerfilter|cs2)$/i
export default handler
